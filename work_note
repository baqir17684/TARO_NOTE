学习计划：
数字人组件
学习兜底和规范
分析需求

交互内容：
1.和产品聊需求，找设计要设计稿。
之后开发阶段先和后端对齐（确认双方手里忙不忙碌，阶段一：双方介入设计，对齐给出前后端文档，
阶段二：开发阶段，前端照着后端文档写UI 阶段三：联调 阶段四：提测（重点关注提测时间）



工作内容：
// 疾病爆发趋势
1.安定医院组件6个 三栏表、五栏表（scrollView) sad-2,4,5（动态渲染样式）
2.轻盈咔
3.疾病爆发趋势 前端绘图、自定义hook处理模块上滑吸附、半弹窗

理解：
1.自定义hook
自定义hook不同于函数，函数获取参数，计算后返回结果。
hook反而是将它的状态量和useEffect注入到使用hook的组件。
hook中的useEffect导致的状态量变化会使得使用该hook的组件重渲染。

2.recharts绘精密图

3.intersection observer做懒加载、无限滚动、智能粘性元素
intersection observer主要用来检查目标元素出现在观察区域的情况
并根据情况触发回调函数执行自定义任务。
观察区域root默认值为视口，可通过rootMargin修改观察区域大小
rootMargin 允许您扩展或缩小根元素（通常是视口）的边界。
它的格式类似于 CSS 的 margin："top right bottom left"。
可以使用像素值或百分比。正值会扩大观察区域。负值会缩小观察区域。
例如rootMargin: 0px, 0px, -300px, 0px会将观察区域变为从视口顶端到视口底端往上300px的区域。
threshold是一个数组，包含了一个或多个阈值，用来指定交叉比率。
比如threshold: [0, 0.5, 1]，表示当目标元素的0%，50%、100%进入视口时触发回调函数。
回调函数中的entries是一个IntersectionObserverEntry对象的数组，每个对象对应一个目标元素。
每个IntersectionObserverEntry对象包含了目标元素的一些信息，比如交叉比率、目标元素的边界等。
entries[0].isIntersecting表示目标元素是否与观察区域相交。（是否出现在观察区域内）

4. border-image和border-radius不兼容
